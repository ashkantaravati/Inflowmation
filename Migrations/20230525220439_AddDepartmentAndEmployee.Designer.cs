// <auto-generated />
using System;
using Inflowmation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inflowmation.Migrations
{
    [DbContext(typeof(InflowmationContext))]
    [Migration("20230525220439_AddDepartmentAndEmployee")]
    partial class AddDepartmentAndEmployee
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Inflowmation.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Inflowmation.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Inflowmation.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descriptions")
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<int?>("IssuedForId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IssuedFromId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("IssuedForId");

                    b.HasIndex("IssuedFromId");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("Inflowmation.Models.Employee", b =>
                {
                    b.HasOne("Inflowmation.Models.Department", null)
                        .WithMany("Members")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("Inflowmation.Models.Request", b =>
                {
                    b.HasOne("Inflowmation.Models.Employee", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Inflowmation.Models.Department", "IssuedFor")
                        .WithMany()
                        .HasForeignKey("IssuedForId");

                    b.HasOne("Inflowmation.Models.Department", "IssuedFrom")
                        .WithMany()
                        .HasForeignKey("IssuedFromId");

                    b.Navigation("CreatedBy");

                    b.Navigation("IssuedFor");

                    b.Navigation("IssuedFrom");
                });

            modelBuilder.Entity("Inflowmation.Models.Department", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
